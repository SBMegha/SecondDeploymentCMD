// <auto-generated />
using System;
using ConnectMyDoc_Data_Layer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectMyDoc_Data_Layer.Migrations
{
    [DbContext(typeof(PatientCMDDbContext))]
    [Migration("20240914202240_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConnectMyDoc_Domain_Layer.Entity.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientGuardianId")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PreferredClinicId")
                        .HasColumnType("int");

                    b.Property<int>("PreferredDoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PreferredEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PreferredStartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PatientId");

                    b.HasIndex("PatientAddressId");

                    b.HasIndex("PatientGuardianId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Age = 25,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(3549),
                            Dob = new DateTime(1998, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Gender = "Male",
                            LastModifiedBy = 1,
                            LastModifiedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(3550),
                            PatientAddressId = 1,
                            PatientGuardianId = 1,
                            PatientName = "John Doe",
                            Phone = "1234567890",
                            PreferredClinicId = 0,
                            PreferredDoctorId = 1,
                            PreferredEndTime = new DateTime(2024, 9, 15, 17, 0, 0, 0, DateTimeKind.Local),
                            PreferredStartTime = new DateTime(2024, 9, 15, 9, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            PatientId = 2,
                            Age = 30,
                            CreatedBy = 2,
                            CreatedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(3559),
                            Dob = new DateTime(1993, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.clark@example.com",
                            Gender = "Female",
                            LastModifiedBy = 2,
                            LastModifiedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(3561),
                            PatientAddressId = 2,
                            PatientGuardianId = 2,
                            PatientName = "Emily Clark",
                            Phone = "1234567891",
                            PreferredClinicId = 0,
                            PreferredDoctorId = 2,
                            PreferredEndTime = new DateTime(2024, 9, 15, 16, 0, 0, 0, DateTimeKind.Local),
                            PreferredStartTime = new DateTime(2024, 9, 15, 8, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("ConnectMyDoc_Domain_Layer.Entity.PatientAddress", b =>
                {
                    b.Property<int>("PatientAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientAddressId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientAddressId");

                    b.ToTable("PatientAddresses");

                    b.HasData(
                        new
                        {
                            PatientAddressId = 1,
                            City = "New York",
                            Country = "USA",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(2372),
                            State = "NY",
                            StreetAddress = "123 Main St",
                            ZipCode = "10001"
                        },
                        new
                        {
                            PatientAddressId = 2,
                            City = "Los Angeles",
                            Country = "USA",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 9, 15, 1, 52, 39, 905, DateTimeKind.Local).AddTicks(2573),
                            State = "CA",
                            StreetAddress = "456 Second St",
                            ZipCode = "90001"
                        });
                });

            modelBuilder.Entity("ConnectMyDoc_Domain_Layer.Entity.PatientGuardian", b =>
                {
                    b.Property<int>("PatientGuardianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientGuardianId"));

                    b.Property<string>("PatientGuardianName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PatientGuardianPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientGuardianRelationship")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PatientGuardianId");

                    b.ToTable("PatientGuardians");

                    b.HasData(
                        new
                        {
                            PatientGuardianId = 1,
                            PatientGuardianName = "Jane Doe",
                            PatientGuardianPhoneNumber = "9876543210",
                            PatientGuardianRelationship = "Mother"
                        },
                        new
                        {
                            PatientGuardianId = 2,
                            PatientGuardianName = "Sam Smith",
                            PatientGuardianPhoneNumber = "9876543211",
                            PatientGuardianRelationship = "Father"
                        });
                });

            modelBuilder.Entity("ConnectMyDoc_Domain_Layer.Entity.Patient", b =>
                {
                    b.HasOne("ConnectMyDoc_Domain_Layer.Entity.PatientAddress", "PatientAddress")
                        .WithMany()
                        .HasForeignKey("PatientAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectMyDoc_Domain_Layer.Entity.PatientGuardian", "PatientGuardian")
                        .WithMany()
                        .HasForeignKey("PatientGuardianId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PatientAddress");

                    b.Navigation("PatientGuardian");
                });
#pragma warning restore 612, 618
        }
    }
}
